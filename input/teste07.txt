apeg block;

block[Grammar g] locals[Grammar g1]:
	'{' dlist<g, g1> slist<g1> '}'
	;
	
dlist[Grammar g] returns[Grammar g1] :
	decl<g, g1> {g = g1;} (decl<g, g1> {g = g1;})*
	;
	
decl[Grammar g] returns[Grammar g1] locals[String s]:
	!('int' var<g>) 'int' id<g, s> ';'
	{g1 = g.copy().addRule("var[Grammar g] locals[char ch]<- " + s + "!alpha<g,ch>"); }
	;
	
slist[Grammar g] :
	stmt<g> stmt<g>*
	;
	
stmt[Grammar g]:
	var<g> = var<g> ';'
	;
	
id[Grammar g] returns[String s] locals[char ch1, char ch2]:
	alpha<g, ch1> {s = ch1} (alpha<g,ch2> {s = s + ch2;})*
	;
alpha[Grammar g] returns[char ch] :
	'a'  { ch = a; }
	/ 'b'  { ch = b; }
	/ 'c'  { ch = c; }
	/ 'd'  { ch = d; }
	/ 'e'  { ch = e; }
	/ 'f'  { ch = f; }
	/ 'g'  { ch = g; }
	/ 'h'  { ch = h; }
	/ 'i'  { ch = i; }
	/ 'j'  { ch = j; }
	/ [k-zA-Z] {ch = '?';}
	;
	