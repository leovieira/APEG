apeg block;

functions AdaptableFunctions;

block[Grammar g] locals[Grammar g1]:
	'{' dlist<g, g1> slist<g1> '}' !.
	;
	
dlist[Grammar g] returns[Grammar g1] :
	decl<g, g1> {g = g1;} (decl<g, g1> {g = g1;})*
	;
	
decl[Grammar g] returns[Grammar g1] locals[String s]:
	!('int ' var) 'int ' id<s> ';'
	{ g1 = addRule(copyGrammar(g), concat('var : ', concat(' \'', concat(s, concat('\' ', '!alpha<ch> ;'))))); }
	;

var locals[char ch] :
	{? false }
	;

slist[Grammar g] :
	stmt stmt*
	;
	
stmt:
	var '=' var ';'
	;
	
id returns[String s] locals[String ch1, String ch2]:
	alpha<ch1> { s = ch1; } ( alpha<ch2> { s = concat(s, ch2); } )*
	;
	
alpha returns[String ch] :
	'a'  { ch = 'a'; }
	/ 'b'  { ch = 'b'; }
	/ 'c'  { ch = 'c'; }
	/ 'd'  { ch = 'd'; }
	/ 'e'  { ch = 'e'; }
	/ 'f'  { ch = 'f'; }
	/ 'g'  { ch = 'g'; }
	/ 'h'  { ch = 'h'; }
	/ 'i'  { ch = 'i'; }
	/ 'j'  { ch = 'j'; }
	/ [k-zA-Z] {ch = '?';}
	;
