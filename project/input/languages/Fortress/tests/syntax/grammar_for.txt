grammar ForLoop extends {Expression, Identifier}
   Expr |:=
      for { i:Id <- e:Expr ,? SPACE }* do block:Expr end =>
      <[ for2 i**; e **;. do block; end ]>
   | for2 i:Id* ; e:Expr* ; do block:Expr ; end =>
     case i of
        Empty => <[ block ]>
        Cons(ia, ib) =>
           case e of
              Empty => <[ throw Unreachable ]>
              Cons(ea,eb) =>
                 <[ ((ea).loop(fn ia => (for2 ib * *; eb * *;
                                         do block; end)))]>
           end
     end

end
