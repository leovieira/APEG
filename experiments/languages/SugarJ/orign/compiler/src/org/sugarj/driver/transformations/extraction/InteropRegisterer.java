package org.sugarj.driver.transformations.extraction;

import org.strategoxt.stratego_lib.*;
import org.strategoxt.lang.*;
import org.spoofax.interpreter.terms.*;
import static org.strategoxt.lang.Term.*;
import org.spoofax.interpreter.library.AbstractPrimitive;
import java.util.ArrayList;
import java.lang.ref.WeakReference;

@SuppressWarnings("unused") public class InteropRegisterer extends org.strategoxt.lang.InteropRegisterer 
{ 
  @Override public void register(org.spoofax.interpreter.core.IContext context, Context compiledContext)
  { 
    register(context, compiledContext, context.getVarScope());
  }

  @Override public void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader)
  { 
    registerLazy(context, compiledContext, classLoader, context.getVarScope());
  }

  private void register(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope)
  { 
    compiledContext.registerComponent("extraction");
    extraction.init(compiledContext);
    varScope.addSVar("accept_sdf_0_0", new InteropSDefT(accept_sdf_0_0.instance, context));
    varScope.addSVar("accept_str_0_0", new InteropSDefT(accept_str_0_0.instance, context));
    varScope.addSVar("accept_editor_0_0", new InteropSDefT(accept_editor_0_0.instance, context));
    varScope.addSVar("singleton_0_0", new InteropSDefT(singleton_0_0.instance, context));
    varScope.addSVar("children_0_0", new InteropSDefT(children_0_0.instance, context));
    varScope.addSVar("filter_children_1_0", new InteropSDefT(filter_children_1_0.instance, context));
    varScope.addSVar("empty_0_0", new InteropSDefT(empty_0_0.instance, context));
    varScope.addSVar("extract_1_0", new InteropSDefT(extract_1_0.instance, context));
    varScope.addSVar("filter_tree_1_0", new InteropSDefT(filter_tree_1_0.instance, context));
    varScope.addSVar("comp_desugarings_to_sdf_0_0", new InteropSDefT(comp_desugarings_to_sdf_0_0.instance, context));
    varScope.addSVar("comp_desugaring_to_sdf_0_0", new InteropSDefT(comp_desugaring_to_sdf_0_0.instance, context));
    varScope.addSVar("fold_conc_grammars_0_0", new InteropSDefT(fold_conc_grammars_0_0.instance, context));
    varScope.addSVar("main_sdf_0_0", new InteropSDefT(main_sdf_0_0.instance, context));
    varScope.addSVar("extract_sdf_0_0", new InteropSDefT(extract_sdf_0_0.instance, context));
    varScope.addSVar("comp_desugarings_to_str_0_0", new InteropSDefT(comp_desugarings_to_str_0_0.instance, context));
    varScope.addSVar("comp_desugaring_to_str_0_0", new InteropSDefT(comp_desugaring_to_str_0_0.instance, context));
    varScope.addSVar("mainSTR_0_0", new InteropSDefT(main$S$T$R_0_0.instance, context));
    varScope.addSVar("extract_str_0_0", new InteropSDefT(extract_str_0_0.instance, context));
    varScope.addSVar("mainEDITOR_0_0", new InteropSDefT(main$E$D$I$T$O$R_0_0.instance, context));
    varScope.addSVar("extract_editor_0_0", new InteropSDefT(extract_editor_0_0.instance, context));
    varScope.addSVar("TransApp_2_0", new InteropSDefT($Trans$App_2_0.instance, context));
    varScope.addSVar("TransformationDef_2_0", new InteropSDefT($Transformation$Def_2_0.instance, context));
    varScope.addSVar("transformation_elem_1_0", new InteropSDefT(transformation_elem_1_0.instance, context));
    varScope.addSVar("grammar_elem_1_0", new InteropSDefT(grammar_elem_1_0.instance, context));
    varScope.addSVar("editor_elem_1_0", new InteropSDefT(editor_elem_1_0.instance, context));
    varScope.addSVar("Desugarings_1_0", new InteropSDefT($Desugarings_1_0.instance, context));
    varScope.addSVar("InjectDesugaring_4_0", new InteropSDefT($Inject$Desugaring_4_0.instance, context));
    varScope.addSVar("PureDesugaring_1_0", new InteropSDefT($Pure$Desugaring_1_0.instance, context));
    varScope.addSVar("Analyses_1_0", new InteropSDefT($Analyses_1_0.instance, context));
    varScope.addSVar("RuleNames_1_0", new InteropSDefT($Rule$Names_1_0.instance, context));
    varScope.addSVar("RDecT_3_0", new InteropSDefT($R$Dec$T_3_0.instance, context));
    varScope.addSVar("RDec_2_0", new InteropSDefT($R$Dec_2_0.instance, context));
    varScope.addSVar("RDecNoArgs_1_0", new InteropSDefT($R$Dec$No$Args_1_0.instance, context));
    varScope.addSVar("DynRuleScopeId_1_0", new InteropSDefT($Dyn$Rule$Scope$Id_1_0.instance, context));
    varScope.addSVar("LabeledDynRuleScopeId_2_0", new InteropSDefT($Labeled$Dyn$Rule$Scope$Id_2_0.instance, context));
    varScope.addSVar("DynRuleId_1_0", new InteropSDefT($Dyn$Rule$Id_1_0.instance, context));
    varScope.addSVar("AddLabelDynRuleId_2_0", new InteropSDefT($Add$Label$Dyn$Rule$Id_2_0.instance, context));
    varScope.addSVar("LabeledDynRuleId_2_0", new InteropSDefT($Labeled$Dyn$Rule$Id_2_0.instance, context));
    varScope.addSVar("SetDynRuleDepends_3_0", new InteropSDefT($Set$Dyn$Rule$Depends_3_0.instance, context));
    varScope.addSVar("DynRuleAssignAdd_2_0", new InteropSDefT($Dyn$Rule$Assign$Add_2_0.instance, context));
    varScope.addSVar("DynRuleAssign_2_0", new InteropSDefT($Dyn$Rule$Assign_2_0.instance, context));
    varScope.addSVar("SetDynRuleMatch_2_0", new InteropSDefT($Set$Dyn$Rule$Match_2_0.instance, context));
    varScope.addSVar("AddDynRule_2_0", new InteropSDefT($Add$Dyn$Rule_2_0.instance, context));
    varScope.addSVar("SetDynRule_2_0", new InteropSDefT($Set$Dyn$Rule_2_0.instance, context));
    varScope.addSVar("UndefineDynRule_2_0", new InteropSDefT($Undefine$Dyn$Rule_2_0.instance, context));
    varScope.addSVar("AddScopeLabel_2_0", new InteropSDefT($Add$Scope$Label_2_0.instance, context));
    varScope.addSVar("ScopeLabels_1_0", new InteropSDefT($Scope$Labels_1_0.instance, context));
    varScope.addSVar("WithClause_1_0", new InteropSDefT($With$Clause_1_0.instance, context));
    varScope.addSVar("WhereClause_1_0", new InteropSDefT($Where$Clause_1_0.instance, context));
    varScope.addSVar("Rule_3_0", new InteropSDefT($Rule_3_0.instance, context));
    varScope.addSVar("RuleNoCond_2_0", new InteropSDefT($Rule$No$Cond_2_0.instance, context));
    varScope.addSVar("RDefT_4_0", new InteropSDefT($R$Def$T_4_0.instance, context));
    varScope.addSVar("RDef_3_0", new InteropSDefT($R$Def_3_0.instance, context));
    varScope.addSVar("RDefNoArgs_2_0", new InteropSDefT($R$Def$No$Args_2_0.instance, context));
    varScope.addSVar("Overlay_3_0", new InteropSDefT($Overlay_3_0.instance, context));
    varScope.addSVar("OverlayNoArgs_2_0", new InteropSDefT($Overlay$No$Args_2_0.instance, context));
    varScope.addSVar("SwitchCase_2_0", new InteropSDefT($Switch$Case_2_0.instance, context));
    varScope.addSVar("StrategyCurly_1_0", new InteropSDefT($Strategy$Curly_1_0.instance, context));
    varScope.addSVar("ListVar_1_0", new InteropSDefT($List$Var_1_0.instance, context));
    varScope.addSVar("ImportWildcard_1_0", new InteropSDefT($Import$Wildcard_1_0.instance, context));
    varScope.addSVar("Import_1_0", new InteropSDefT($Import_1_0.instance, context));
    varScope.addSVar("Overlays_1_0", new InteropSDefT($Overlays_1_0.instance, context));
    varScope.addSVar("Rules_1_0", new InteropSDefT($Rules_1_0.instance, context));
    varScope.addSVar("Signature_1_0", new InteropSDefT($Signature_1_0.instance, context));
    varScope.addSVar("Strategies_1_0", new InteropSDefT($Strategies_1_0.instance, context));
    varScope.addSVar("Imports_1_0", new InteropSDefT($Imports_1_0.instance, context));
    varScope.addSVar("Specification_1_0", new InteropSDefT($Specification_1_0.instance, context));
    varScope.addSVar("Module_2_0", new InteropSDefT($Module_2_0.instance, context));
    varScope.addSVar("ParenStrat_1_0", new InteropSDefT($Paren$Strat_1_0.instance, context));
    varScope.addSVar("DefaultVarDec_1_0", new InteropSDefT($Default$Var$Dec_1_0.instance, context));
    varScope.addSVar("VarDec_2_0", new InteropSDefT($Var$Dec_2_0.instance, context));
    varScope.addSVar("SDef_3_0", new InteropSDefT($S$Def_3_0.instance, context));
    varScope.addSVar("SDefNoArgs_2_0", new InteropSDefT($S$Def$No$Args_2_0.instance, context));
    varScope.addSVar("ExtSDef_3_0", new InteropSDefT($Ext$S$Def_3_0.instance, context));
    varScope.addSVar("ExtSDefInl_4_0", new InteropSDefT($Ext$S$Def$Inl_4_0.instance, context));
    varScope.addSVar("SDefT_4_0", new InteropSDefT($S$Def$T_4_0.instance, context));
    varScope.addSVar("DynRuleIntersectUnion_4_0", new InteropSDefT($Dyn$Rule$Intersect$Union_4_0.instance, context));
    varScope.addSVar("DynRuleUnion_3_0", new InteropSDefT($Dyn$Rule$Union_3_0.instance, context));
    varScope.addSVar("DynRuleIntersect_3_0", new InteropSDefT($Dyn$Rule$Intersect_3_0.instance, context));
    varScope.addSVar("DynRuleIntersectUnionFix_3_0", new InteropSDefT($Dyn$Rule$Intersect$Union$Fix_3_0.instance, context));
    varScope.addSVar("DynRuleUnionFix_2_0", new InteropSDefT($Dyn$Rule$Union$Fix_2_0.instance, context));
    varScope.addSVar("DynRuleIntersectFix_2_0", new InteropSDefT($Dyn$Rule$Intersect$Fix_2_0.instance, context));
    varScope.addSVar("GenDynRules_1_0", new InteropSDefT($Gen$Dyn$Rules_1_0.instance, context));
    varScope.addSVar("DynRuleScope_2_0", new InteropSDefT($Dyn$Rule$Scope_2_0.instance, context));
    varScope.addSVar("Assign_2_0", new InteropSDefT($Assign_2_0.instance, context));
    varScope.addSVar("AM_2_0", new InteropSDefT($A$M_2_0.instance, context));
    varScope.addSVar("SwitchChoice_3_0", new InteropSDefT($Switch$Choice_3_0.instance, context));
    varScope.addSVar("SwitchChoiceNoOtherwise_2_0", new InteropSDefT($Switch$Choice$No$Otherwise_2_0.instance, context));
    varScope.addSVar("IfThen_2_0", new InteropSDefT($If$Then_2_0.instance, context));
    varScope.addSVar("CondChoice_3_0", new InteropSDefT($Cond$Choice_3_0.instance, context));
    varScope.addSVar("RChoice_2_0", new InteropSDefT($R$Choice_2_0.instance, context));
    varScope.addSVar("Choice_2_0", new InteropSDefT($Choice_2_0.instance, context));
    varScope.addSVar("SRule_1_0", new InteropSDefT($S$Rule_1_0.instance, context));
    varScope.addSVar("LRule_1_0", new InteropSDefT($L$Rule_1_0.instance, context));
    varScope.addSVar("CallNoArgs_1_0", new InteropSDefT($Call$No$Args_1_0.instance, context));
    varScope.addSVar("ExplodeCong_2_0", new InteropSDefT($Explode$Cong_2_0.instance, context));
    varScope.addSVar("ListCong_2_0", new InteropSDefT($List$Cong_2_0.instance, context));
    varScope.addSVar("ListCongNoTail_1_0", new InteropSDefT($List$Cong$No$Tail_1_0.instance, context));
    varScope.addSVar("TupleCong_2_0", new InteropSDefT($Tuple$Cong_2_0.instance, context));
    varScope.addSVar("EmptyTupleCong_0_0", new InteropSDefT($Empty$Tuple$Cong_0_0.instance, context));
    varScope.addSVar("AnnoCong_2_0", new InteropSDefT($Anno$Cong_2_0.instance, context));
    varScope.addSVar("CongQ_2_0", new InteropSDefT($Cong$Q_2_0.instance, context));
    varScope.addSVar("CharCong_1_0", new InteropSDefT($Char$Cong_1_0.instance, context));
    varScope.addSVar("RealCong_1_0", new InteropSDefT($Real$Cong_1_0.instance, context));
    varScope.addSVar("IntCong_1_0", new InteropSDefT($Int$Cong_1_0.instance, context));
    varScope.addSVar("StrCong_1_0", new InteropSDefT($Str$Cong_1_0.instance, context));
    varScope.addSVar("Prim_2_0", new InteropSDefT($Prim_2_0.instance, context));
    varScope.addSVar("PrimNoArgs_1_0", new InteropSDefT($Prim$No$Args_1_0.instance, context));
    varScope.addSVar("Test_1_0", new InteropSDefT($Test_1_0.instance, context));
    varScope.addSVar("With_1_0", new InteropSDefT($With_1_0.instance, context));
    varScope.addSVar("Where_1_0", new InteropSDefT($Where_1_0.instance, context));
    varScope.addSVar("Not_1_0", new InteropSDefT($Not_1_0.instance, context));
    varScope.addSVar("Rec_2_0", new InteropSDefT($Rec_2_0.instance, context));
    varScope.addSVar("LChoice_2_0", new InteropSDefT($L$Choice_2_0.instance, context));
    varScope.addSVar("BA_2_0", new InteropSDefT($B$A_2_0.instance, context));
    varScope.addSVar("ScopeDefault_1_0", new InteropSDefT($Scope$Default_1_0.instance, context));
    varScope.addSVar("Call_2_0", new InteropSDefT($Call_2_0.instance, context));
    varScope.addSVar("ImportTerm_1_0", new InteropSDefT($Import$Term_1_0.instance, context));
    varScope.addSVar("All_1_0", new InteropSDefT($All_1_0.instance, context));
    varScope.addSVar("One_1_0", new InteropSDefT($One_1_0.instance, context));
    varScope.addSVar("PrimT_3_0", new InteropSDefT($Prim$T_3_0.instance, context));
    varScope.addSVar("GuardedLChoice_3_0", new InteropSDefT($Guarded$L$Choice_3_0.instance, context));
    varScope.addSVar("Seq_2_0", new InteropSDefT($Seq_2_0.instance, context));
    varScope.addSVar("Scope_2_0", new InteropSDefT($Scope_2_0.instance, context));
    varScope.addSVar("Build_1_0", new InteropSDefT($Build_1_0.instance, context));
    varScope.addSVar("Match_1_0", new InteropSDefT($Match_1_0.instance, context));
    varScope.addSVar("Id_0_0", new InteropSDefT($Id_0_0.instance, context));
    varScope.addSVar("Fail_0_0", new InteropSDefT($Fail_0_0.instance, context));
    varScope.addSVar("CallDynamic_3_0", new InteropSDefT($Call$Dynamic_3_0.instance, context));
    varScope.addSVar("CallT_3_0", new InteropSDefT($Call$T_3_0.instance, context));
    varScope.addSVar("Let_2_0", new InteropSDefT($Let_2_0.instance, context));
    varScope.addSVar("SVar_1_0", new InteropSDefT($S$Var_1_0.instance, context));
    varScope.addSVar("FunType_2_0", new InteropSDefT($Fun$Type_2_0.instance, context));
    varScope.addSVar("ConstType_1_0", new InteropSDefT($Const$Type_1_0.instance, context));
    varScope.addSVar("ExtOpDeclInj_1_0", new InteropSDefT($Ext$Op$Decl$Inj_1_0.instance, context));
    varScope.addSVar("ExtOpDeclQ_2_0", new InteropSDefT($Ext$Op$Decl$Q_2_0.instance, context));
    varScope.addSVar("ExtOpDecl_2_0", new InteropSDefT($Ext$Op$Decl_2_0.instance, context));
    varScope.addSVar("OpDeclInj_1_0", new InteropSDefT($Op$Decl$Inj_1_0.instance, context));
    varScope.addSVar("OpDeclQ_2_0", new InteropSDefT($Op$Decl$Q_2_0.instance, context));
    varScope.addSVar("OpDecl_2_0", new InteropSDefT($Op$Decl_2_0.instance, context));
    varScope.addSVar("SortTuple_1_0", new InteropSDefT($Sort$Tuple_1_0.instance, context));
    varScope.addSVar("SortListTl_2_0", new InteropSDefT($Sort$List$Tl_2_0.instance, context));
    varScope.addSVar("SortList_1_0", new InteropSDefT($Sort$List_1_0.instance, context));
    varScope.addSVar("Sort_2_0", new InteropSDefT($Sort_2_0.instance, context));
    varScope.addSVar("SortNoArgs_1_0", new InteropSDefT($Sort$No$Args_1_0.instance, context));
    varScope.addSVar("SortVar_1_0", new InteropSDefT($Sort$Var_1_0.instance, context));
    varScope.addSVar("Constructors_1_0", new InteropSDefT($Constructors_1_0.instance, context));
    varScope.addSVar("Sorts_1_0", new InteropSDefT($Sorts_1_0.instance, context));
    varScope.addSVar("Wld_0_0", new InteropSDefT($Wld_0_0.instance, context));
    varScope.addSVar("RootApp_1_0", new InteropSDefT($Root$App_1_0.instance, context));
    varScope.addSVar("App_2_0", new InteropSDefT($App_2_0.instance, context));
    varScope.addSVar("NoAnnoList_1_0", new InteropSDefT($No$Anno$List_1_0.instance, context));
    varScope.addSVar("AnnoList_2_0", new InteropSDefT($Anno$List_2_0.instance, context));
    varScope.addSVar("BuildDefault_1_0", new InteropSDefT($Build$Default_1_0.instance, context));
    varScope.addSVar("As_2_0", new InteropSDefT($As_2_0.instance, context));
    varScope.addSVar("ListTail_2_0", new InteropSDefT($List$Tail_2_0.instance, context));
    varScope.addSVar("List_1_0", new InteropSDefT($List_1_0.instance, context));
    varScope.addSVar("Tuple_1_0", new InteropSDefT($Tuple_1_0.instance, context));
    varScope.addSVar("Char_1_0", new InteropSDefT($Char_1_0.instance, context));
    varScope.addSVar("BuildDefaultPT_1_0", new InteropSDefT($Build$Default$P$T_1_0.instance, context));
    varScope.addSVar("Explode_2_0", new InteropSDefT($Explode_2_0.instance, context));
    varScope.addSVar("OpQ_2_0", new InteropSDefT($Op$Q_2_0.instance, context));
    varScope.addSVar("Op_2_0", new InteropSDefT($Op_2_0.instance, context));
    varScope.addSVar("Str_1_0", new InteropSDefT($Str_1_0.instance, context));
    varScope.addSVar("Real_1_0", new InteropSDefT($Real_1_0.instance, context));
    varScope.addSVar("Int_1_0", new InteropSDefT($Int_1_0.instance, context));
    varScope.addSVar("Var_1_0", new InteropSDefT($Var_1_0.instance, context));
    varScope.addSVar("definition_1_0", new InteropSDefT(definition_1_0.instance, context));
    varScope.addSVar("alias_2_0", new InteropSDefT(alias_2_0.instance, context));
    varScope.addSVar("follow_2_0", new InteropSDefT(follow_2_0.instance, context));
    varScope.addSVar("alt_2_0", new InteropSDefT(alt_2_0.instance, context));
    varScope.addSVar("single_1_0", new InteropSDefT(single_1_0.instance, context));
    varScope.addSVar("seq_2_0", new InteropSDefT(seq_2_0.instance, context));
    varScope.addSVar("char_class_1_0", new InteropSDefT(char_class_1_0.instance, context));
    varScope.addSVar("unquoted_1_0", new InteropSDefT(unquoted_1_0.instance, context));
    varScope.addSVar("quoted_1_0", new InteropSDefT(quoted_1_0.instance, context));
    varScope.addSVar("quoted_fun_1_0", new InteropSDefT(quoted_fun_1_0.instance, context));
    varScope.addSVar("unquoted_fun_1_0", new InteropSDefT(unquoted_fun_1_0.instance, context));
    varScope.addSVar("union_2_0", new InteropSDefT(union_2_0.instance, context));
    varScope.addSVar("isect_2_0", new InteropSDefT(isect_2_0.instance, context));
    varScope.addSVar("diff_2_0", new InteropSDefT(diff_2_0.instance, context));
    varScope.addSVar("comp_1_0", new InteropSDefT(comp_1_0.instance, context));
    varScope.addSVar("simple_charclass_1_0", new InteropSDefT(simple_charclass_1_0.instance, context));
    varScope.addSVar("present_1_0", new InteropSDefT(present_1_0.instance, context));
    varScope.addSVar("absent_0_0", new InteropSDefT(absent_0_0.instance, context));
    varScope.addSVar("conc_2_0", new InteropSDefT(conc_2_0.instance, context));
    varScope.addSVar("range_2_0", new InteropSDefT(range_2_0.instance, context));
    varScope.addSVar("label__start_0_0", new InteropSDefT(label__start_0_0.instance, context));
    varScope.addSVar("bot_0_0", new InteropSDefT(bot_0_0.instance, context));
    varScope.addSVar("eof_0_0", new InteropSDefT(eof_0_0.instance, context));
    varScope.addSVar("top_0_0", new InteropSDefT(top_0_0.instance, context));
    varScope.addSVar("short_1_0", new InteropSDefT(short_1_0.instance, context));
    varScope.addSVar("numeric_1_0", new InteropSDefT(numeric_1_0.instance, context));
    varScope.addSVar("assoc_3_0", new InteropSDefT(assoc_3_0.instance, context));
    varScope.addSVar("chain_1_0", new InteropSDefT(chain_1_0.instance, context));
    varScope.addSVar("assoc_group_2_0", new InteropSDefT(assoc_group_2_0.instance, context));
    varScope.addSVar("prods_group_1_0", new InteropSDefT(prods_group_1_0.instance, context));
    varScope.addSVar("simple_group_1_0", new InteropSDefT(simple_group_1_0.instance, context));
    varScope.addSVar("non_transitive_1_0", new InteropSDefT(non_transitive_1_0.instance, context));
    varScope.addSVar("with_arguments_2_0", new InteropSDefT(with_arguments_2_0.instance, context));
    varScope.addSVar("default_1_0", new InteropSDefT(default_1_0.instance, context));
    varScope.addSVar("assoc_0_0", new InteropSDefT(assoc_0_0.instance, context));
    varScope.addSVar("non_assoc_0_0", new InteropSDefT(non_assoc_0_0.instance, context));
    varScope.addSVar("right_0_0", new InteropSDefT(right_0_0.instance, context));
    varScope.addSVar("left_0_0", new InteropSDefT(left_0_0.instance, context));
    varScope.addSVar("renamed_module_2_0", new InteropSDefT(renamed_module_2_0.instance, context));
    varScope.addSVar("module_1_0", new InteropSDefT(module_1_0.instance, context));
    varScope.addSVar("imports_1_0", new InteropSDefT(imports_1_0.instance, context));
    varScope.addSVar("parameterized_2_0", new InteropSDefT(parameterized_2_0.instance, context));
    varScope.addSVar("unparameterized_1_0", new InteropSDefT(unparameterized_1_0.instance, context));
    varScope.addSVar("hiddens_1_0", new InteropSDefT(hiddens_1_0.instance, context));
    varScope.addSVar("exports_1_0", new InteropSDefT(exports_1_0.instance, context));
    varScope.addSVar("module_3_0", new InteropSDefT(module_3_0.instance, context));
    varScope.addSVar("production_2_0", new InteropSDefT(production_2_0.instance, context));
    varScope.addSVar("symbol_2_0", new InteropSDefT(symbol_2_0.instance, context));
    varScope.addSVar("renamings_1_0", new InteropSDefT(renamings_1_0.instance, context));
    varScope.addSVar("file_start_0_0", new InteropSDefT(file_start_0_0.instance, context));
    varScope.addSVar("start_0_0", new InteropSDefT(start_0_0.instance, context));
    varScope.addSVar("label_2_0", new InteropSDefT(label_2_0.instance, context));
    varScope.addSVar("ci_lit_1_0", new InteropSDefT(ci_lit_1_0.instance, context));
    varScope.addSVar("lit_1_0", new InteropSDefT(lit_1_0.instance, context));
    varScope.addSVar("parameterized_sort_2_0", new InteropSDefT(parameterized_sort_2_0.instance, context));
    varScope.addSVar("sort_1_0", new InteropSDefT(sort_1_0.instance, context));
    varScope.addSVar("lifting_1_0", new InteropSDefT(lifting_1_0.instance, context));
    varScope.addSVar("strategy_2_0", new InteropSDefT(strategy_2_0.instance, context));
    varScope.addSVar("func_2_0", new InteropSDefT(func_2_0.instance, context));
    varScope.addSVar("tuple_2_0", new InteropSDefT(tuple_2_0.instance, context));
    varScope.addSVar("iter_star_sep_2_0", new InteropSDefT(iter_star_sep_2_0.instance, context));
    varScope.addSVar("iter_sep_2_0", new InteropSDefT(iter_sep_2_0.instance, context));
    varScope.addSVar("iter_star_1_0", new InteropSDefT(iter_star_1_0.instance, context));
    varScope.addSVar("iter_1_0", new InteropSDefT(iter_1_0.instance, context));
    varScope.addSVar("opt_1_0", new InteropSDefT(opt_1_0.instance, context));
    varScope.addSVar("layout_0_0", new InteropSDefT(layout_0_0.instance, context));
    varScope.addSVar("varsym_1_0", new InteropSDefT(varsym_1_0.instance, context));
    varScope.addSVar("lex_1_0", new InteropSDefT(lex_1_0.instance, context));
    varScope.addSVar("cf_1_0", new InteropSDefT(cf_1_0.instance, context));
    varScope.addSVar("prefix_fun_4_0", new InteropSDefT(prefix_fun_4_0.instance, context));
    varScope.addSVar("prod_3_0", new InteropSDefT(prod_3_0.instance, context));
    varScope.addSVar("no_attrs_0_0", new InteropSDefT(no_attrs_0_0.instance, context));
    varScope.addSVar("attrs_1_0", new InteropSDefT(attrs_1_0.instance, context));
    varScope.addSVar("avoid_0_0", new InteropSDefT(avoid_0_0.instance, context));
    varScope.addSVar("prefer_0_0", new InteropSDefT(prefer_0_0.instance, context));
    varScope.addSVar("reject_0_0", new InteropSDefT(reject_0_0.instance, context));
    varScope.addSVar("assoc_1_0", new InteropSDefT(assoc_1_0.instance, context));
    varScope.addSVar("bracket_0_0", new InteropSDefT(bracket_0_0.instance, context));
    varScope.addSVar("id_1_0", new InteropSDefT(id_1_0.instance, context));
    varScope.addSVar("term_1_0", new InteropSDefT(term_1_0.instance, context));
    varScope.addSVar("context_free_restrictions_1_0", new InteropSDefT(context_free_restrictions_1_0.instance, context));
    varScope.addSVar("lexical_restrictions_1_0", new InteropSDefT(lexical_restrictions_1_0.instance, context));
    varScope.addSVar("context_free_priorities_1_0", new InteropSDefT(context_free_priorities_1_0.instance, context));
    varScope.addSVar("lexical_priorities_1_0", new InteropSDefT(lexical_priorities_1_0.instance, context));
    varScope.addSVar("aliases_1_0", new InteropSDefT(aliases_1_0.instance, context));
    varScope.addSVar("restrictions_1_0", new InteropSDefT(restrictions_1_0.instance, context));
    varScope.addSVar("context_free_start_symbols_1_0", new InteropSDefT(context_free_start_symbols_1_0.instance, context));
    varScope.addSVar("lexical_start_symbols_1_0", new InteropSDefT(lexical_start_symbols_1_0.instance, context));
    varScope.addSVar("kernel_start_symbols_1_0", new InteropSDefT(kernel_start_symbols_1_0.instance, context));
    varScope.addSVar("sorts_1_0", new InteropSDefT(sorts_1_0.instance, context));
    varScope.addSVar("priorities_1_0", new InteropSDefT(priorities_1_0.instance, context));
    varScope.addSVar("imp_section_1_0", new InteropSDefT(imp_section_1_0.instance, context));
    varScope.addSVar("lexical_variables_1_0", new InteropSDefT(lexical_variables_1_0.instance, context));
    varScope.addSVar("variables_1_0", new InteropSDefT(variables_1_0.instance, context));
    varScope.addSVar("context_free_syntax_1_0", new InteropSDefT(context_free_syntax_1_0.instance, context));
    varScope.addSVar("lexical_syntax_1_0", new InteropSDefT(lexical_syntax_1_0.instance, context));
    varScope.addSVar("syntax_1_0", new InteropSDefT(syntax_1_0.instance, context));
    varScope.addSVar("conc_grammars_2_0", new InteropSDefT(conc_grammars_2_0.instance, context));
    varScope.addSVar("empty_grammar_0_0", new InteropSDefT(empty_grammar_0_0.instance, context));
    varScope.addSVar("annotated_2_0", new InteropSDefT(annotated_2_0.instance, context));
    varScope.addSVar("placeholder_1_0", new InteropSDefT(placeholder_1_0.instance, context));
    varScope.addSVar("appl_2_0", new InteropSDefT(appl_2_0.instance, context));
    varScope.addSVar("fun_1_0", new InteropSDefT(fun_1_0.instance, context));
    varScope.addSVar("real_1_0", new InteropSDefT(real_1_0.instance, context));
    varScope.addSVar("int_1_0", new InteropSDefT(int_1_0.instance, context));
    varScope.addSVar("real_con_3_0", new InteropSDefT(real_con_3_0.instance, context));
    varScope.addSVar("negative_1_0", new InteropSDefT(negative_1_0.instance, context));
    varScope.addSVar("positive_1_0", new InteropSDefT(positive_1_0.instance, context));
    varScope.addSVar("natural_1_0", new InteropSDefT(natural_1_0.instance, context));
  }

  private void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader, org.spoofax.interpreter.core.VarScope varScope)
  { 
    compiledContext.registerComponent("extraction");
    extraction.init(compiledContext);
    varScope.addSVar("accept_sdf_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.accept_sdf_0_0", context));
    varScope.addSVar("accept_str_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.accept_str_0_0", context));
    varScope.addSVar("accept_editor_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.accept_editor_0_0", context));
    varScope.addSVar("singleton_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.singleton_0_0", context));
    varScope.addSVar("children_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.children_0_0", context));
    varScope.addSVar("filter_children_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.filter_children_1_0", context));
    varScope.addSVar("empty_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.empty_0_0", context));
    varScope.addSVar("extract_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.extract_1_0", context));
    varScope.addSVar("filter_tree_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.filter_tree_1_0", context));
    varScope.addSVar("comp_desugarings_to_sdf_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.comp_desugarings_to_sdf_0_0", context));
    varScope.addSVar("comp_desugaring_to_sdf_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.comp_desugaring_to_sdf_0_0", context));
    varScope.addSVar("fold_conc_grammars_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.fold_conc_grammars_0_0", context));
    varScope.addSVar("main_sdf_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.main_sdf_0_0", context));
    varScope.addSVar("extract_sdf_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.extract_sdf_0_0", context));
    varScope.addSVar("comp_desugarings_to_str_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.comp_desugarings_to_str_0_0", context));
    varScope.addSVar("comp_desugaring_to_str_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.comp_desugaring_to_str_0_0", context));
    varScope.addSVar("mainSTR_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.main$S$T$R_0_0", context));
    varScope.addSVar("extract_str_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.extract_str_0_0", context));
    varScope.addSVar("mainEDITOR_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.main$E$D$I$T$O$R_0_0", context));
    varScope.addSVar("extract_editor_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.extract_editor_0_0", context));
    varScope.addSVar("TransApp_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Trans$App_2_0", context));
    varScope.addSVar("TransformationDef_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Transformation$Def_2_0", context));
    varScope.addSVar("transformation_elem_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.transformation_elem_1_0", context));
    varScope.addSVar("grammar_elem_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.grammar_elem_1_0", context));
    varScope.addSVar("editor_elem_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.editor_elem_1_0", context));
    varScope.addSVar("Desugarings_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Desugarings_1_0", context));
    varScope.addSVar("InjectDesugaring_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Inject$Desugaring_4_0", context));
    varScope.addSVar("PureDesugaring_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Pure$Desugaring_1_0", context));
    varScope.addSVar("Analyses_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Analyses_1_0", context));
    varScope.addSVar("RuleNames_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Rule$Names_1_0", context));
    varScope.addSVar("RDecT_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Dec$T_3_0", context));
    varScope.addSVar("RDec_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Dec_2_0", context));
    varScope.addSVar("RDecNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Dec$No$Args_1_0", context));
    varScope.addSVar("DynRuleScopeId_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Scope$Id_1_0", context));
    varScope.addSVar("LabeledDynRuleScopeId_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Labeled$Dyn$Rule$Scope$Id_2_0", context));
    varScope.addSVar("DynRuleId_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Id_1_0", context));
    varScope.addSVar("AddLabelDynRuleId_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Add$Label$Dyn$Rule$Id_2_0", context));
    varScope.addSVar("LabeledDynRuleId_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Labeled$Dyn$Rule$Id_2_0", context));
    varScope.addSVar("SetDynRuleDepends_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Set$Dyn$Rule$Depends_3_0", context));
    varScope.addSVar("DynRuleAssignAdd_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Assign$Add_2_0", context));
    varScope.addSVar("DynRuleAssign_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Assign_2_0", context));
    varScope.addSVar("SetDynRuleMatch_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Set$Dyn$Rule$Match_2_0", context));
    varScope.addSVar("AddDynRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Add$Dyn$Rule_2_0", context));
    varScope.addSVar("SetDynRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Set$Dyn$Rule_2_0", context));
    varScope.addSVar("UndefineDynRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Undefine$Dyn$Rule_2_0", context));
    varScope.addSVar("AddScopeLabel_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Add$Scope$Label_2_0", context));
    varScope.addSVar("ScopeLabels_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Scope$Labels_1_0", context));
    varScope.addSVar("WithClause_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$With$Clause_1_0", context));
    varScope.addSVar("WhereClause_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Where$Clause_1_0", context));
    varScope.addSVar("Rule_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Rule_3_0", context));
    varScope.addSVar("RuleNoCond_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Rule$No$Cond_2_0", context));
    varScope.addSVar("RDefT_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Def$T_4_0", context));
    varScope.addSVar("RDef_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Def_3_0", context));
    varScope.addSVar("RDefNoArgs_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Def$No$Args_2_0", context));
    varScope.addSVar("Overlay_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Overlay_3_0", context));
    varScope.addSVar("OverlayNoArgs_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Overlay$No$Args_2_0", context));
    varScope.addSVar("SwitchCase_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Switch$Case_2_0", context));
    varScope.addSVar("StrategyCurly_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Strategy$Curly_1_0", context));
    varScope.addSVar("ListVar_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List$Var_1_0", context));
    varScope.addSVar("ImportWildcard_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Import$Wildcard_1_0", context));
    varScope.addSVar("Import_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Import_1_0", context));
    varScope.addSVar("Overlays_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Overlays_1_0", context));
    varScope.addSVar("Rules_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Rules_1_0", context));
    varScope.addSVar("Signature_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Signature_1_0", context));
    varScope.addSVar("Strategies_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Strategies_1_0", context));
    varScope.addSVar("Imports_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Imports_1_0", context));
    varScope.addSVar("Specification_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Specification_1_0", context));
    varScope.addSVar("Module_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Module_2_0", context));
    varScope.addSVar("ParenStrat_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Paren$Strat_1_0", context));
    varScope.addSVar("DefaultVarDec_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Default$Var$Dec_1_0", context));
    varScope.addSVar("VarDec_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Var$Dec_2_0", context));
    varScope.addSVar("SDef_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$S$Def_3_0", context));
    varScope.addSVar("SDefNoArgs_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$S$Def$No$Args_2_0", context));
    varScope.addSVar("ExtSDef_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Ext$S$Def_3_0", context));
    varScope.addSVar("ExtSDefInl_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Ext$S$Def$Inl_4_0", context));
    varScope.addSVar("SDefT_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$S$Def$T_4_0", context));
    varScope.addSVar("DynRuleIntersectUnion_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Intersect$Union_4_0", context));
    varScope.addSVar("DynRuleUnion_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Union_3_0", context));
    varScope.addSVar("DynRuleIntersect_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Intersect_3_0", context));
    varScope.addSVar("DynRuleIntersectUnionFix_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Intersect$Union$Fix_3_0", context));
    varScope.addSVar("DynRuleUnionFix_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Union$Fix_2_0", context));
    varScope.addSVar("DynRuleIntersectFix_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Intersect$Fix_2_0", context));
    varScope.addSVar("GenDynRules_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Gen$Dyn$Rules_1_0", context));
    varScope.addSVar("DynRuleScope_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Scope_2_0", context));
    varScope.addSVar("Assign_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Assign_2_0", context));
    varScope.addSVar("AM_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$A$M_2_0", context));
    varScope.addSVar("SwitchChoice_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Switch$Choice_3_0", context));
    varScope.addSVar("SwitchChoiceNoOtherwise_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Switch$Choice$No$Otherwise_2_0", context));
    varScope.addSVar("IfThen_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$If$Then_2_0", context));
    varScope.addSVar("CondChoice_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Cond$Choice_3_0", context));
    varScope.addSVar("RChoice_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Choice_2_0", context));
    varScope.addSVar("Choice_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Choice_2_0", context));
    varScope.addSVar("SRule_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$S$Rule_1_0", context));
    varScope.addSVar("LRule_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$L$Rule_1_0", context));
    varScope.addSVar("CallNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Call$No$Args_1_0", context));
    varScope.addSVar("ExplodeCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Explode$Cong_2_0", context));
    varScope.addSVar("ListCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List$Cong_2_0", context));
    varScope.addSVar("ListCongNoTail_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List$Cong$No$Tail_1_0", context));
    varScope.addSVar("TupleCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Tuple$Cong_2_0", context));
    varScope.addSVar("EmptyTupleCong_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Empty$Tuple$Cong_0_0", context));
    varScope.addSVar("AnnoCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Anno$Cong_2_0", context));
    varScope.addSVar("CongQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Cong$Q_2_0", context));
    varScope.addSVar("CharCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Char$Cong_1_0", context));
    varScope.addSVar("RealCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Real$Cong_1_0", context));
    varScope.addSVar("IntCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Int$Cong_1_0", context));
    varScope.addSVar("StrCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Str$Cong_1_0", context));
    varScope.addSVar("Prim_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Prim_2_0", context));
    varScope.addSVar("PrimNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Prim$No$Args_1_0", context));
    varScope.addSVar("Test_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Test_1_0", context));
    varScope.addSVar("With_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$With_1_0", context));
    varScope.addSVar("Where_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Where_1_0", context));
    varScope.addSVar("Not_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Not_1_0", context));
    varScope.addSVar("Rec_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Rec_2_0", context));
    varScope.addSVar("LChoice_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$L$Choice_2_0", context));
    varScope.addSVar("BA_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$B$A_2_0", context));
    varScope.addSVar("ScopeDefault_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Scope$Default_1_0", context));
    varScope.addSVar("Call_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Call_2_0", context));
    varScope.addSVar("ImportTerm_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Import$Term_1_0", context));
    varScope.addSVar("All_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$All_1_0", context));
    varScope.addSVar("One_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$One_1_0", context));
    varScope.addSVar("PrimT_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Prim$T_3_0", context));
    varScope.addSVar("GuardedLChoice_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Guarded$L$Choice_3_0", context));
    varScope.addSVar("Seq_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Seq_2_0", context));
    varScope.addSVar("Scope_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Scope_2_0", context));
    varScope.addSVar("Build_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Build_1_0", context));
    varScope.addSVar("Match_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Match_1_0", context));
    varScope.addSVar("Id_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Id_0_0", context));
    varScope.addSVar("Fail_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Fail_0_0", context));
    varScope.addSVar("CallDynamic_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Call$Dynamic_3_0", context));
    varScope.addSVar("CallT_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Call$T_3_0", context));
    varScope.addSVar("Let_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Let_2_0", context));
    varScope.addSVar("SVar_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$S$Var_1_0", context));
    varScope.addSVar("FunType_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Fun$Type_2_0", context));
    varScope.addSVar("ConstType_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Const$Type_1_0", context));
    varScope.addSVar("ExtOpDeclInj_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Ext$Op$Decl$Inj_1_0", context));
    varScope.addSVar("ExtOpDeclQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Ext$Op$Decl$Q_2_0", context));
    varScope.addSVar("ExtOpDecl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Ext$Op$Decl_2_0", context));
    varScope.addSVar("OpDeclInj_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Op$Decl$Inj_1_0", context));
    varScope.addSVar("OpDeclQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Op$Decl$Q_2_0", context));
    varScope.addSVar("OpDecl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Op$Decl_2_0", context));
    varScope.addSVar("SortTuple_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$Tuple_1_0", context));
    varScope.addSVar("SortListTl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$List$Tl_2_0", context));
    varScope.addSVar("SortList_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$List_1_0", context));
    varScope.addSVar("Sort_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort_2_0", context));
    varScope.addSVar("SortNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$No$Args_1_0", context));
    varScope.addSVar("SortVar_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$Var_1_0", context));
    varScope.addSVar("Constructors_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Constructors_1_0", context));
    varScope.addSVar("Sorts_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sorts_1_0", context));
    varScope.addSVar("Wld_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Wld_0_0", context));
    varScope.addSVar("RootApp_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Root$App_1_0", context));
    varScope.addSVar("App_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$App_2_0", context));
    varScope.addSVar("NoAnnoList_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$No$Anno$List_1_0", context));
    varScope.addSVar("AnnoList_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Anno$List_2_0", context));
    varScope.addSVar("BuildDefault_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Build$Default_1_0", context));
    varScope.addSVar("As_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$As_2_0", context));
    varScope.addSVar("ListTail_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List$Tail_2_0", context));
    varScope.addSVar("List_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List_1_0", context));
    varScope.addSVar("Tuple_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Tuple_1_0", context));
    varScope.addSVar("Char_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Char_1_0", context));
    varScope.addSVar("BuildDefaultPT_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Build$Default$P$T_1_0", context));
    varScope.addSVar("Explode_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Explode_2_0", context));
    varScope.addSVar("OpQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Op$Q_2_0", context));
    varScope.addSVar("Op_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Op_2_0", context));
    varScope.addSVar("Str_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Str_1_0", context));
    varScope.addSVar("Real_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Real_1_0", context));
    varScope.addSVar("Int_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Int_1_0", context));
    varScope.addSVar("Var_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Var_1_0", context));
    varScope.addSVar("definition_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.definition_1_0", context));
    varScope.addSVar("alias_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.alias_2_0", context));
    varScope.addSVar("follow_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.follow_2_0", context));
    varScope.addSVar("alt_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.alt_2_0", context));
    varScope.addSVar("single_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.single_1_0", context));
    varScope.addSVar("seq_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.seq_2_0", context));
    varScope.addSVar("char_class_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.char_class_1_0", context));
    varScope.addSVar("unquoted_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.unquoted_1_0", context));
    varScope.addSVar("quoted_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.quoted_1_0", context));
    varScope.addSVar("quoted_fun_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.quoted_fun_1_0", context));
    varScope.addSVar("unquoted_fun_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.unquoted_fun_1_0", context));
    varScope.addSVar("union_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.union_2_0", context));
    varScope.addSVar("isect_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.isect_2_0", context));
    varScope.addSVar("diff_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.diff_2_0", context));
    varScope.addSVar("comp_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.comp_1_0", context));
    varScope.addSVar("simple_charclass_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.simple_charclass_1_0", context));
    varScope.addSVar("present_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.present_1_0", context));
    varScope.addSVar("absent_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.absent_0_0", context));
    varScope.addSVar("conc_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.conc_2_0", context));
    varScope.addSVar("range_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.range_2_0", context));
    varScope.addSVar("label__start_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.label__start_0_0", context));
    varScope.addSVar("bot_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.bot_0_0", context));
    varScope.addSVar("eof_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.eof_0_0", context));
    varScope.addSVar("top_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.top_0_0", context));
    varScope.addSVar("short_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.short_1_0", context));
    varScope.addSVar("numeric_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.numeric_1_0", context));
    varScope.addSVar("assoc_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.assoc_3_0", context));
    varScope.addSVar("chain_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.chain_1_0", context));
    varScope.addSVar("assoc_group_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.assoc_group_2_0", context));
    varScope.addSVar("prods_group_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.prods_group_1_0", context));
    varScope.addSVar("simple_group_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.simple_group_1_0", context));
    varScope.addSVar("non_transitive_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.non_transitive_1_0", context));
    varScope.addSVar("with_arguments_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.with_arguments_2_0", context));
    varScope.addSVar("default_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.default_1_0", context));
    varScope.addSVar("assoc_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.assoc_0_0", context));
    varScope.addSVar("non_assoc_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.non_assoc_0_0", context));
    varScope.addSVar("right_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.right_0_0", context));
    varScope.addSVar("left_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.left_0_0", context));
    varScope.addSVar("renamed_module_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.renamed_module_2_0", context));
    varScope.addSVar("module_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.module_1_0", context));
    varScope.addSVar("imports_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.imports_1_0", context));
    varScope.addSVar("parameterized_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.parameterized_2_0", context));
    varScope.addSVar("unparameterized_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.unparameterized_1_0", context));
    varScope.addSVar("hiddens_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.hiddens_1_0", context));
    varScope.addSVar("exports_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.exports_1_0", context));
    varScope.addSVar("module_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.module_3_0", context));
    varScope.addSVar("production_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.production_2_0", context));
    varScope.addSVar("symbol_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.symbol_2_0", context));
    varScope.addSVar("renamings_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.renamings_1_0", context));
    varScope.addSVar("file_start_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.file_start_0_0", context));
    varScope.addSVar("start_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.start_0_0", context));
    varScope.addSVar("label_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.label_2_0", context));
    varScope.addSVar("ci_lit_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.ci_lit_1_0", context));
    varScope.addSVar("lit_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lit_1_0", context));
    varScope.addSVar("parameterized_sort_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.parameterized_sort_2_0", context));
    varScope.addSVar("sort_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.sort_1_0", context));
    varScope.addSVar("lifting_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lifting_1_0", context));
    varScope.addSVar("strategy_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.strategy_2_0", context));
    varScope.addSVar("func_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.func_2_0", context));
    varScope.addSVar("tuple_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.tuple_2_0", context));
    varScope.addSVar("iter_star_sep_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.iter_star_sep_2_0", context));
    varScope.addSVar("iter_sep_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.iter_sep_2_0", context));
    varScope.addSVar("iter_star_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.iter_star_1_0", context));
    varScope.addSVar("iter_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.iter_1_0", context));
    varScope.addSVar("opt_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.opt_1_0", context));
    varScope.addSVar("layout_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.layout_0_0", context));
    varScope.addSVar("varsym_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.varsym_1_0", context));
    varScope.addSVar("lex_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lex_1_0", context));
    varScope.addSVar("cf_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.cf_1_0", context));
    varScope.addSVar("prefix_fun_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.prefix_fun_4_0", context));
    varScope.addSVar("prod_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.prod_3_0", context));
    varScope.addSVar("no_attrs_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.no_attrs_0_0", context));
    varScope.addSVar("attrs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.attrs_1_0", context));
    varScope.addSVar("avoid_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.avoid_0_0", context));
    varScope.addSVar("prefer_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.prefer_0_0", context));
    varScope.addSVar("reject_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.reject_0_0", context));
    varScope.addSVar("assoc_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.assoc_1_0", context));
    varScope.addSVar("bracket_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.bracket_0_0", context));
    varScope.addSVar("id_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.id_1_0", context));
    varScope.addSVar("term_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.term_1_0", context));
    varScope.addSVar("context_free_restrictions_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.context_free_restrictions_1_0", context));
    varScope.addSVar("lexical_restrictions_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lexical_restrictions_1_0", context));
    varScope.addSVar("context_free_priorities_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.context_free_priorities_1_0", context));
    varScope.addSVar("lexical_priorities_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lexical_priorities_1_0", context));
    varScope.addSVar("aliases_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.aliases_1_0", context));
    varScope.addSVar("restrictions_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.restrictions_1_0", context));
    varScope.addSVar("context_free_start_symbols_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.context_free_start_symbols_1_0", context));
    varScope.addSVar("lexical_start_symbols_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lexical_start_symbols_1_0", context));
    varScope.addSVar("kernel_start_symbols_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.kernel_start_symbols_1_0", context));
    varScope.addSVar("sorts_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.sorts_1_0", context));
    varScope.addSVar("priorities_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.priorities_1_0", context));
    varScope.addSVar("imp_section_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.imp_section_1_0", context));
    varScope.addSVar("lexical_variables_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lexical_variables_1_0", context));
    varScope.addSVar("variables_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.variables_1_0", context));
    varScope.addSVar("context_free_syntax_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.context_free_syntax_1_0", context));
    varScope.addSVar("lexical_syntax_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lexical_syntax_1_0", context));
    varScope.addSVar("syntax_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.syntax_1_0", context));
    varScope.addSVar("conc_grammars_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.conc_grammars_2_0", context));
    varScope.addSVar("empty_grammar_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.empty_grammar_0_0", context));
    varScope.addSVar("annotated_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.annotated_2_0", context));
    varScope.addSVar("placeholder_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.placeholder_1_0", context));
    varScope.addSVar("appl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.appl_2_0", context));
    varScope.addSVar("fun_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.fun_1_0", context));
    varScope.addSVar("real_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.real_1_0", context));
    varScope.addSVar("int_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.int_1_0", context));
    varScope.addSVar("real_con_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.real_con_3_0", context));
    varScope.addSVar("negative_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.negative_1_0", context));
    varScope.addSVar("positive_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.positive_1_0", context));
    varScope.addSVar("natural_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.natural_1_0", context));
  }
}