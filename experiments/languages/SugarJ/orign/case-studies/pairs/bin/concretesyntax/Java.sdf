module concretesyntax/Java
 imports org/sugarj/java/init/initGrammar concretesyntax/MetaExplode
exports 
  (/)
context-free syntax
  "~" JavaExpr -> JavaExpr {reject}
variables
  "java_" [ij] [0-9\']*             -> JavaDeciLiteral {prefer}
  "java_" [ij] [\_] [a-zA-Z0-9\']*  -> JavaDeciLiteral {prefer}
  "java_" [xyz] [0-9\']*            -> JavaID          {prefer}
  "java_" [xyz] [\_] [a-zA-Z0-9\']* -> JavaID          {prefer}
context-free restrictions
  ID -/- [\_a-zA-Z0-9\'] context-free syntax
                           "~id:" StrategoTerm -> JavaID {cons("FromMetaExpr")}
                           "~Id:" StrategoTerm -> JavaId {cons("FromMetaExpr")}
variables
  "java_" "e" [0-9\']*            -> JavaExpr           {prefer}
  "java_" "e_" [a-zA-Z0-9\']*     -> JavaExpr           {prefer}
  "java_" "e" [0-9\']* "*"        -> {JavaVarInit ","}* {prefer}
  "java_" "e_" [a-zA-Z0-9\']* "*" -> {JavaVarInit ","}* {prefer}
  "java_" "e" [0-9\']* "*"        -> {JavaExpr ","}*    {prefer}
  "java_" "e_" [a-zA-Z0-9\']* "*" -> {JavaExpr ","}*    {prefer}
lexical syntax
  "java_" "e" [0-9\']*        -> JavaID {reject}
  "java_" "e_" [a-zA-Z0-9\']* -> JavaID {reject}
context-free syntax
  "java_expr" "|[" JavaExpr "]|"           -> StrategoTerm {cons("ToMetaExpr")}
  "java" "|[" JavaExpr "]|"                -> StrategoTerm {cons("ToMetaExpr")}
  "|[" JavaExpr "]|"                       -> StrategoTerm {cons("ToMetaExpr")}
  "java_" "var-init" "|[" JavaVarInit "]|" -> StrategoTerm {cons("ToMetaExpr")}
context-free syntax
  "~" StrategoTerm           -> JavaExpr      {cons("FromMetaExpr")}
  "~expr:" StrategoTerm      -> JavaExpr      {cons("FromMetaExpr")}
  "~" StrategoTerm           -> JavaArrayInit {cons("FromMetaExpr")}
  "~arrayinit:" StrategoTerm -> JavaArrayInit {cons("FromMetaExpr")}
variables
  "java_" "stm" [0-9\']*             -> JavaStm       {prefer}
  "java_" "stm_" [a-zA-Z0-9\']*      -> JavaStm       {prefer}
  "java_" "bstm" [0-9\']*            -> JavaBlockStm  {prefer}
  "java_" "bstm_" [a-zA-Z0-9\']*     -> JavaBlockStm  {prefer}
  "java_" "bstm" [0-9\']* "*"        -> JavaBlockStm* {prefer}
  "java_" "bstm_" [a-zA-Z0-9\']* "*" -> JavaBlockStm* {prefer}
context-free syntax
  "java_bstm" "|[" JavaBlockStm "]|"            -> StrategoTerm {cons("ToMetaExpr")}
  "java" "|[" JavaBlockStm "]|"                 -> StrategoTerm {cons("ToMetaExpr")}
  "|[" JavaBlockStm "]|"                        -> StrategoTerm {cons("ToMetaExpr")}
  "java_bstm*" "|[" JavaBlockStm* "]|"          -> StrategoTerm {cons("ToMetaListExpr")}
  "java_block-stm" "|[" JavaBlockStm "]|"       -> StrategoTerm {cons("ToMetaExpr")}
  "java" "|[" JavaBlockStm "]|"                 -> StrategoTerm {cons("ToMetaExpr")}
  "|[" JavaBlockStm "]|"                        -> StrategoTerm {cons("ToMetaExpr")}
  "java_block-stm*" "|[" JavaBlockStm* "]|"     -> StrategoTerm {cons("ToMetaListExpr")}
  "java_stm" "|[" JavaStm "]|"                  -> StrategoTerm {cons("ToMetaExpr")}
  "java_switch-group" "|[" JavaSwitchGroup "]|" -> StrategoTerm {cons("ToMetaListExpr")}
context-free syntax
  "~" StrategoTerm               -> JavaBlockStm     {cons("FromMetaExpr")}
  "~bstm:" StrategoTerm          -> JavaBlockStm     {cons("FromMetaExpr")}
  "~*" StrategoTerm              -> JavaBlockStm*    {cons("FromMetaExpr")}
  "~bstm*:" StrategoTerm         -> JavaBlockStm*    {cons("FromMetaExpr")}
  "~stm:" StrategoTerm           -> JavaStm          {cons("FromMetaExpr"), prefer}
  "~" StrategoTerm               -> JavaStm          {cons("FromMetaExpr")}
  "~*" StrategoTerm              -> JavaSwitchGroup* {cons("FromMetaExpr")}
  "~switch-group*:" StrategoTerm -> JavaSwitchGroup* {cons("FromMetaExpr")}
  "~" StrategoTerm               -> JavaSwitchGroup  {cons("FromMetaExpr")}
  "~switch-group:" StrategoTerm  -> JavaSwitchGroup  {cons("FromMetaExpr")}
context-free syntax
  "~block:" StrategoTerm -> JavaBlock {cons("FromMetaExpr"), prefer}
variables
  "java_" "lvdec" [0-9]*           -> JavaLocalVarDec   {prefer}
  "java_" "lvdec_" [a-zA-Z0-9]*    -> JavaLocalVarDec   {prefer}
  "java_" "vdec" [0-9]*            -> JavaVarDec        {prefer}
  "java_" "vdec_" [a-zA-Z0-9]*     -> JavaVarDec        {prefer}
  "java_" "vdec" [0-9]* "*"        -> {JavaVarDec ","}+ {prefer}
  "java_" "vdec_" [a-zA-Z0-9]* "*" -> {JavaVarDec ","}+ {prefer}
lexical syntax
  "java_" "lvdec"               -> JavaID {reject}
  "java_" "lvdec_" [a-zA-Z0-9]* -> JavaID {reject}
  "java_" "vdec"                -> JavaID {reject}
  "java_" "vdec_" [a-zA-Z0-9]*  -> JavaID {reject}
context-free syntax
  "java_lvdec" "|[" JavaLocalVarDec "]|" -> StrategoTerm {cons("ToMetaExpr")}
  "java_vdec" "|[" JavaVarDec "]|"       -> StrategoTerm {cons("ToMetaExpr")}
  "java_tdec" "|[" JavaTypeDec "]|"      -> StrategoTerm {cons("ToMetaExpr")} context-free syntax
                                                                                
variables
  "java_" "lhs" [0-9\']* -> JavaLHS {prefer}
  "java_" "e" [0-9\']*   -> JavaLHS {prefer}
lexical syntax
  "java_" "lhs" [0-9\']* -> JavaID {reject}
variables
  MetaTypeVar     -> JavaType     {prefer}
  MetaPrimTypeVar -> JavaPrimType {prefer}
  MetaRefTypeVar  -> JavaRefType  {prefer}
lexical syntax
  "java_" "t" [0-9\']*          -> MetaTypeVar     
  "java_" "t_" [a-zA-Z0-9\']*   -> MetaTypeVar     
  "java_" "primt" [0-9]*        -> MetaPrimTypeVar 
  "java_" "reft" [0-9]*         -> MetaRefTypeVar  
  "java_" "reft" [a-zA-Z0-9\']* -> MetaRefTypeVar  
  "java_" "t" [0-9\']*          -> JavaID          {reject}
  "java_" "primt" [0-9]*        -> JavaID          {reject}
  "java_" "reft" [0-9]*         -> JavaID          {reject}
lexical restrictions
  MetaTypeVar -/- [a-zA-Z0-9\_\$\']
context-free syntax
  "java_type" "|[" JavaType "]|" -> StrategoTerm {cons("ToMetaExpr")}
  "java" "|[" JavaType "]|"      -> StrategoTerm {cons("ToMetaExpr")}
  "|[" JavaType "]|"             -> StrategoTerm {cons("ToMetaExpr")}
context-free syntax
  "~" StrategoTerm               -> JavaType          {cons("FromMetaExpr")}
  "~type:" StrategoTerm          -> JavaType          {cons("FromMetaExpr")}
  "~" StrategoTerm               -> JavaArrayBaseType {cons("FromMetaExpr")}
  "~arraybasetype:" StrategoTerm -> JavaArrayBaseType {cons("FromMetaExpr")}
  "~" StrategoTerm               -> JavaRefType       {cons("FromMetaExpr"), avoid}
  "~reftype:" StrategoTerm       -> JavaRefType       {cons("FromMetaExpr")}
variables
  "java_" "param" [0-9]*     -> JavaFormalParam        {prefer}
  "java_" "param" [0-9]* "*" -> {JavaFormalParam ","}* {prefer}
context-free syntax
  "java_param" "|[" JavaFormalParam "]|"                -> StrategoTerm {cons("ToMetaExpr")}
  "java_param*" "|[" {JavaFormalParam ","}* "]|"        -> StrategoTerm {cons("ToMetaExpr")}
  "java_formal-param" "|[" JavaFormalParam "]|"         -> StrategoTerm {cons("ToMetaExpr")}
  "java" "|[" JavaFormalParam "]|"                      -> StrategoTerm {cons("ToMetaExpr")}
  "|[" JavaFormalParam "]|"                             -> StrategoTerm {cons("ToMetaExpr")}
  "java_formal-param*" "|[" {JavaFormalParam ","}* "]|" -> StrategoTerm {cons("ToMetaExpr")}
  "java" "|[" {JavaFormalParam ","}* "]|"               -> StrategoTerm {cons("ToMetaExpr")}
  "|[" {JavaFormalParam ","}* "]|"                      -> StrategoTerm {cons("ToMetaExpr")}
context-free syntax
  "~" StrategoTerm  -> JavaFormalParam        {cons("FromMetaExpr")}
  "~*" StrategoTerm -> {JavaFormalParam ","}* {cons("FromMetaExpr")}
context-free syntax
  "java_package-dec" "|[" JavaPackageDec "]|"   -> StrategoTerm {cons("ToMetaExpr")}
  "|[" JavaPackageDec "]|"                      -> StrategoTerm {cons("ToMetaExpr")}
  "java_package-dec?" "|[" JavaPackageDec? "]|" -> StrategoTerm {cons("ToMetaExpr")}
context-free syntax
  "~package-dec:" StrategoTerm  -> JavaPackageDec  {cons("FromMetaExpr")}
  "~package-dec?:" StrategoTerm -> JavaPackageDec? {cons("FromMetaExpr")}
context-free syntax
  "java_import-dec" "|[" JavaImportDec "]|"   -> StrategoTerm {cons("ToMetaExpr")}
  "|[" JavaImportDec "]|"                     -> StrategoTerm {cons("ToMetaExpr")}
  "java_import-dec*" "|[" JavaImportDec* "]|" -> StrategoTerm {cons("ToMetaListExpr")}
context-free syntax
  "~import-dec:" StrategoTerm  -> JavaImportDec  {cons("FromMetaExpr")}
  "~import-dec*:" StrategoTerm -> JavaImportDec* {cons("FromMetaExpr")}
syntax
  "~" <StrategoTerm-CF>                   -> JavaStringChars {cons("FromMetaExpr"), prefer}
  "~" <StrategoTerm-CF> <LAYOUT?-CF>      -> JavaSingleChar  {cons("FromMetaExpr"), prefer}
  "~string:" <StrategoTerm-CF>            -> JavaStringChars {cons("FromMetaExpr"), prefer}
  "~char:" <StrategoTerm-CF> <LAYOUT?-CF> -> JavaSingleChar  {cons("FromMetaExpr"), prefer}
context-free syntax
  "java_method-dec" "|[" JavaMethodDec "]|" -> StrategoTerm {cons("ToMetaExpr")}
  "java" "|[" JavaMethodDec "]|"            -> StrategoTerm {cons("ToMetaExpr")}
  "|[" JavaMethodDec "]|"                   -> StrategoTerm {cons("ToMetaExpr")}