module xml/XmlTextTools

 imports org/sugarj/java/init/InitTrans concretesyntax/Java xml/XmlSyntax


strategies
  string2xml-attr-value =
    string-as-chars(xml-escape-chars)


strategies
  xml-escape =
    string-as-chars(xml-escape-chars)

  xml-escape-chars =
    rec x (
      try(
        escape-amp
        + escape-lt
        + escape-gt
        + escape-apos
        + escape-quot
      )
      ; ([id|x] <+ [])
    )

  escape-amp :
    ['&'|cs] -> ['&', 'a', 'm', 'p', ';'|cs]

  escape-lt :
    ['<'|cs] -> ['&', 'l', 't', ';'|cs]

  escape-gt :
    ['>'|cs] -> ['&', 'g', 't', ';'|cs]

  escape-apos :
    ['\''|cs] -> ['&', 'a', 'p', 'o', 's', ';'|cs]

  escape-quot :
    ['"'|cs] -> ['&', 'q', 'u', 'o', 't', ';'|cs]


strategies
  xml-unescape =
    string-as-chars(xml-unescape-chars)

  xml-unescape-chars =
    rec x (
      try(
        unescape-amp
        + unescape-lt
        + unescape-gt
        + unescape-apos
        + unescape-quot
        + unescape-dec-charref
        + unescape-hex-charref
      )
      ; ([id|x] <+ [])
    )

  unescape-amp :
    ['&', 'a', 'm', 'p', ';'|cs] -> ['&'|cs]

  unescape-lt :
    ['&', 'l', 't', ';'|cs] -> ['<'|cs]

  unescape-gt :
    ['&', 'g', 't', ';'|cs] -> ['>'|cs]

  unescape-apos :
    ['&', 'a', 'p', 'o', 's', ';'|cs] -> ['\''|cs]

  unescape-quot :
    ['&', 'q', 'u', 'o', 't', ';'|cs] -> ['"'|cs]

  xml-unescape =
    Text(
      map(
        ?CharDataPart(_)
        <+ unescape-amp
           + unescape-lt
           + unescape-gt
           + unescape-apos
           + unescape-quot
           + unescape-dec-charref
           + unescape-hex-charref
      )
    )

  unescape-amp :
    EntityRef("amp") -> CharDataPart("&")

  unescape-lt :
    EntityRef("lt") -> CharDataPart("<")

  unescape-gt :
    EntityRef("gt") -> CharDataPart(">")

  unescape-apos :
    EntityRef("apos") -> CharDataPart("'")

  unescape-quot :
    EntityRef("quot") -> CharDataPart("\"")

  unescape-dec-charref :
    DecCharRef(s) -> CharDataPart(<dec-char-to-string> s)

  unescape-hex-charref :
    HexCharRef(s) -> CharDataPart(<hex-char-to-string> s)

  dec-char-to-string =
    string-as-chars(
      all(is-num) ; dec-chars-to-int ; ![<id>]
    )

  hex-char-to-string =
    string-as-chars(
      all(is-hexnum) ; hex-chars-to-int ; ![<id>]
    )


strategies
  xml-unquote-attr =
    string-as-chars(xml-unquote-chars-attr)

  xml-unquote-chars-attr =
    unquote-chars(?'"' + ?'\'')

  xml-attr-value2strings =
    (\ DoubleQuoted(parts) -> Text(parts) \
     + \ SingleQuoted(parts) -> Text(parts) \)
    ; chardata2strings

  xml-attr-value2string =
    (\ DoubleQuoted(parts) -> Text(parts) \
     + \ SingleQuoted(parts) -> Text(parts) \)
    ; chardata2string

  chardata2strings =
    xml-unescape
    ; ?Text(<id>)
    ; map(
        ?CharDataPart(<id>) + ?CDATASection(<id>)
      )

  chardata2string =
    chardata2strings ; (?[<id>] <+ concat-strings)

  java-string-exprs =
    map(java-string-expr)
    ; foldr(
        !(<java-string-expr> "")
      , \ (a, b) -> Plus(a, b) \
      )