module xml/AsSax

 imports org/sugarj/java/init/InitTrans concretesyntax/Java eblock/EBlock org/sugarj/languages/Java xml/XmlSyntax xml/XmlTextTools


strategies
  desugar =
    changed-tree(meta-explode-sax)


strategies
  meta-explode-sax =
    alltd(explode-write ; meta-explode-sax)

  explode-write :
    ToMetaStm(WriteDoc(Id(x), c)) -> java_block
    where <content-to-block(|x)> c => java_block

  content-to-block(|java_x) =
    map(content-to-block(|java_x))
    ; !Block(<id>)

  content-to-block(|java_x):
    Document(_, c, _) -> Block(
                           [ExprStm(
                              Invoke(
                                Method(
                                  MethodName(
                                    AmbName(Id(java_x))
                                  , Id("startDocument")
                                  )
                                )
                              , []
                              )
                            )|[java_block|[ ExprStm(
                                              Invoke(
                                                Method(
                                                  MethodName(
                                                    AmbName(Id(java_x))
                                                  , Id("endDocument")
                                                  )
                                                )
                                              , []
                                              )
                                            )
                                          ]]]
                         )
    where <content-to-block(|java_x)> c => java_block

  content-to-block(|java_x):
    Element(
      ElemName(QName(pref, n))
    , atts
    , children
    , ElemName(QName(pref', n'))
    ) -> Block(
           [LocalVarDecStm(
              LocalVarDec(
                []
              , ClassOrInterfaceType(
                  TypeName(
                    PackageOrTypeName(
                      PackageOrTypeName(
                        PackageOrTypeName(
                          PackageOrTypeName(Id("org"))
                        , Id("xml")
                        )
                      , Id("sax")
                      )
                    , Id("helpers")
                    )
                  , Id("AttributesImpl")
                  )
                , None()
                )
              , [ VarDec(
                    Id(java_y)
                  , NewInstance(
                      None()
                    , ClassOrInterfaceType(
                        TypeName(
                          PackageOrTypeName(
                            PackageOrTypeName(
                              PackageOrTypeName(
                                PackageOrTypeName(Id("org"))
                              , Id("xml")
                              )
                            , Id("sax")
                            )
                          , Id("helpers")
                          )
                        , Id("AttributesImpl")
                        )
                      , None()
                      )
                    , []
                    , None()
                    )
                  )
                ]
              )
            )|[java_block1|[ExprStm(
                              Invoke(
                                Method(
                                  MethodName(
                                    AmbName(Id(java_x))
                                  , Id("startElement")
                                  )
                                )
                              , [<java-string-prefix> pref|[<java-string-expr> n|[<java-string-qname> (pref, n)|[ExprName(Id(java_y))]]]]
                              )
                            )|[java_block2|[ ExprStm(
                                               Invoke(
                                                 Method(
                                                   MethodName(
                                                     AmbName(Id(java_x))
                                                   , Id("endElement")
                                                   )
                                                 )
                                               , [<java-string-prefix> pref'|[<java-string-expr> n'|[<java-string-qname> (pref, n)]]]
                                               )
                                             )
                                           ]]]]]
         )
    where <content-to-block(|java_x)> children => java_block2
          ; new => java_y
          ; <attribute-to-block(|java_y)> atts => java_block1

  content-to-block(|java_x):
    EmptyElement(
      ElemName(QName(pref, n))
    , atts
    ) -> Block(
           [LocalVarDecStm(
              LocalVarDec(
                []
              , ClassOrInterfaceType(
                  TypeName(
                    PackageOrTypeName(
                      PackageOrTypeName(
                        PackageOrTypeName(
                          PackageOrTypeName(Id("org"))
                        , Id("xml")
                        )
                      , Id("sax")
                      )
                    , Id("helpers")
                    )
                  , Id("AttributesImpl")
                  )
                , None()
                )
              , [ VarDec(
                    Id(java_y)
                  , NewInstance(
                      None()
                    , ClassOrInterfaceType(
                        TypeName(
                          PackageOrTypeName(
                            PackageOrTypeName(
                              PackageOrTypeName(
                                PackageOrTypeName(Id("org"))
                              , Id("xml")
                              )
                            , Id("sax")
                            )
                          , Id("helpers")
                          )
                        , Id("AttributesImpl")
                        )
                      , None()
                      )
                    , []
                    , None()
                    )
                  )
                ]
              )
            )|[java_block|[ExprStm(
                             Invoke(
                               Method(
                                 MethodName(
                                   AmbName(Id(java_x))
                                 , Id("startElement")
                                 )
                               )
                             , [<java-string-prefix> pref|[<java-string-expr> n|[<java-string-qname> (pref, n)|[ExprName(Id(java_y))]]]]
                             )
                           )|[ ExprStm(
                                 Invoke(
                                   Method(
                                     MethodName(
                                       AmbName(Id(java_x))
                                     , Id("endElement")
                                     )
                                   )
                                 , [<java-string-prefix> pref|[<java-string-expr> n|[<java-string-qname> (pref, n)]]]
                                 )
                               )
                             ]]]]
         )
    where new => java_y
          ; <attribute-to-block(|java_y)> atts => java_block

  content-to-block(|java_x):
    TextFromMetaExpr(java_e) -> Block(
                                  [LocalVarDecStm(
                                     LocalVarDec(
                                       []
                                     , ClassOrInterfaceType(
                                         TypeName(Id("String"))
                                       , None()
                                       )
                                     , [VarDec(Id(java_y), java_e)]
                                     )
                                   )|[ ExprStm(
                                         Invoke(
                                           Method(
                                             MethodName(
                                               AmbName(Id(java_x))
                                             , Id("characters")
                                             )
                                           )
                                         , [Invoke(
                                              Method(
                                                MethodName(
                                                  AmbName(Id(java_y))
                                                , Id("toCharArray")
                                                )
                                              )
                                            , []
                                            )|[Lit(Deci("0"))|[ Invoke(
                                                                  Method(
                                                                    MethodName(
                                                                      AmbName(Id(java_y))
                                                                    , Id("length")
                                                                    )
                                                                  )
                                                                , []
                                                                )
                                                              ]]]
                                         )
                                       )
                                     ]]
                                )
    where new => java_y

  attribute-to-block(|java_y) =
    map(attribute-to-stm(|java_y))
    ; !Block(<id>)

  attribute-to-stm(|java_y):
    Attribute(
      AttrName(QName(pref, n))
    , v
    ) -> ExprStm(
           Invoke(
             Method(
               MethodName(
                 AmbName(Id(java_y))
               , Id("addAttribute")
               )
             )
           , [<java-string-prefix> pref|[<java-string-expr> n|[<java-string-qname> (pref, n)|[Lit(
                                                                                                String([Chars("CDATA")])
                                                                                              )|[java_e]]]]]
           )
         )
    where <attribute-value-to-expr> v => java_e

  attribute-value-to-expr :
    v -> <java-string-exprs> s
    where <xml-attr-value2strings> v => s

  attribute-value-to-expr :
    FromMetaExpr(e) -> e

  content-to-block(|java_x):
    Text(s) -> Block(
                 [ ExprStm(
                     Invoke(
                       Method(
                         MethodName(
                           AmbName(Id(java_x))
                         , Id("characters")
                         )
                       )
                     , [NewArray(
                          Char()
                        , [Dim()]
                        , init
                        )|[Lit(Deci("0"))|[Lit(Deci(java_i))]]]
                     )
                   )
                 ]
               )
    where <(chardata2string ; explode-string)> Text(s) => cs
          ; <(length ; int-to-string)> cs => java_i
          ; <map(
               \ '\n' -> Lit(Char(NamedEscape(110))) \
               <+ \ '\r' -> Lit(Char(NamedEscape(114))) \
               <+ \ c -> <java-char-expr> c \
             )> cs => es
          ; <!ArrayInit(<id>)> es => init

  concat-content =
    bottomup(
      try(
        \ Conc(l1, l2) -> <conc> (l1, l2) \
      )
    )

  content-to-block(|java_x):
    Comment(_) -> Block([Empty()])


rules

  java-string-prefix :
    None -> <java-string-expr> ""

  java-string-prefix :
    Some(Prefix(pref)) -> <java-string-expr> ""

  java-string-prefix :
    Some(URIPrefix(pref)) -> <java-string-expr> pref


rules

  java-string-qname :
    (None, name) -> <java-string-expr> name

  java-string-qname :
    (Some(Prefix(pref)), name) -> <concat-strings ; java-string-expr> [pref, ":", name]

  java-string-qname :
    (Some(URIPrefix(pref)), name) -> <concat-strings ; java-string-expr> ["{", pref, "}", name]